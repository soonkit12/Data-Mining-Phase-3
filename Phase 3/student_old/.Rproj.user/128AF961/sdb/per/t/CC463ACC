{
    "collab_server" : "",
    "contents" : "library(shiny)\nlibrary(DT)\nlibrary(ggplot2)\nlibrary(Amelia)\n\n\n\nstuMat <- read.table(file = \"files/student-mat.csv\", header = TRUE, sep =\";\")\nstuPor <- read.table(file = \"files/student-por.csv\", header = TRUE, sep =\";\")\n\nserver <- function(input, output) {\n  # Filter data based on selections - stuMath\n  output$studentMathtable <- DT::renderDataTable(DT::datatable({\n    data <- stuMat\n    if (input$school != \"All\") {\n      data <- data[data$school == input$school,]\n    }\n    if (input$G3 != \"All\") {\n      data <- data[data$G3 == input$G3,]\n    }\n    if (input$paid != \"All\") {\n      data <- data[data$paid == input$paid,]\n    }\n    data\n  }))\n  \n  # Filter data based on selections - stuPor\n  output$studentPortable <- DT::renderDataTable(DT::datatable({\n    data1 <- stuPor\n    if (input$school1 != \"All\") {\n      data1 <- data1[data1$school == input$school1,]\n    }\n    if (input$G31 != \"All\") {\n      data1 <- data1[data1$G3 == input$G31,]\n    }\n    if (input$paid1 != \"All\") {\n      data1 <- data1[data1$paid == input$paid1,]\n    }\n    data1\n  }))\n  \n  #summary for StuMat\n  output$summaryStuMat <- renderPrint({\n    summary(stuMat)\n  })\n  \n  \n  #summary for StuPor\n  output$summaryStuPor <- renderPrint({\n    summary(stuPor)\n  })\n  \n  #structure for StuMat\n  output$strucMath <- renderPrint({\n    str(stuMat)\n  })\n  \n  \n  #structure for StuPor\n  output$strucPor <- renderPrint({\n    str(stuPor)\n  })\n  \n  #barplot for sex vs G3 rates proportion - studentMath\n  output$plot1 <- renderPlot({\n    barplot(counts, main=\"Sex vs Final Grade (G3) rates in proportion for StudentMath\", xlab=\"G3\", col=c(\"darkblue\",\"red\"), legend = rownames(counts), beside=TRUE)\n  })\n  \n  #barplot for sex vs G3 rates proportion - studentPor\n  output$plot2 <- renderPlot({\n    barplot(counts2, main=\"Sex VS Final Grade (G3) rates in proportion for StudentPor\", xlab=\"G3\", col=c(\"darkblue\",\"red\"), legend = rownames(counts2), beside=TRUE)\n  })\n  \n  #Scatterplot correlation G3 vs G1 + G2\n  output$scat1 <- renderPlot({\n    pairs(~G3+G1+G2,data = stuMat,col=c(\"red\",\"blue\",\"green\"), main = \"Correlationship for G3 with G1 and G2 - StudentMath\")\n  })\n  \n  output$scat2 <- renderPlot({\n    pairs(~G3+G1+G2,data = stuPor,col=c(\"red\",\"blue\",\"green\"), main = \"Correlationship for G3 with G1 and G2 - StudentPor\")\n  })\n  \n  #missing value \n  output$miplot1 <- renderPlot({\n    missmap(stuMat, main = \"Missing values vs observed for studentMath\")\n  })\n  \n  output$miplot2 <- renderPlot({\n    missmap(stuPor, main = \"Missing values vs observed for studentPor\")\n  })\n  \n  #outlier \n  output$boxplot1 <- renderPlot({\n     boxplot(stuMat, main = \"Boxplot for StudentMath \")\n  })\n  \n  output$boxplot2 <- renderPlot({\n    boxplot(stuPor, main = \"Boxplot for StudentPor \")\n  })\n  \n  \n  #k-means clustering before cluster based on higher variable for student wants to take higher education (binary: yes or no)  \n  output$bcluster1 <- renderPlot({\n    ggplot(stuMat, aes(G1, G2, color = higher)) + geom_point() + ggtitle(\"Random cluster for G1 vs G2 on higher variable\")\n  })\n  \n  #after\n  output$acluster1 <- renderPlot({\n    # set the seed to ensure reproducibility\n    set.seed(20)\n    # R will try 20 different random starting assignments and then select the one with the lowest within cluster variation.\n    stuMatCluster <- kmeans(stuMat[, 31:32], 2, nstart = 20)\n   \n    #compare the 2 clusters with the higher (yes or no)\n    table(stuMatCluster$cluster, stuMat$higher)\n    stuMatCluster$cluster <- as.factor(stuMatCluster$cluster)\n    ggplot(stuMat, aes(G1, G2,  color = stuMatCluster$cluster)) + geom_point() + ggtitle(\"2 cluster for  G1 vs G2 on higher variable\")\n    \n  })\n  #studentPor k-means - before\n  output$bcluster2 <- renderPlot({\n    ggplot(stuPor, aes(G1, G2, color = higher)) + geom_point() + ggtitle(\"Random cluster for G1 vs G2 on higher variable\")\n  })\n  #after\n  output$acluster2 <- renderPlot({\n    # set the seed to ensure reproducibility\n    set.seed(20)\n    stuPorCluster <- kmeans(stuPor[, 31:32], 2, nstart = 20)\n    stuPorCluster\n    table(stuPorCluster$cluster, stuPor$higher)\n    stuPorCluster$cluster <- as.factor(stuPorCluster$cluster)\n    ggplot(stuPor, aes(G1, G2,  color = stuPorCluster$cluster)) + geom_point() + ggtitle(\"2 cluster for  G1 vs G2 on higher variable\")\n    \n  })\n  \n  \n  \n}\n\n",
    "created" : 1482936866431.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "746057231",
    "id" : "CC463ACC",
    "lastKnownWriteTime" : 1483091493,
    "last_content_update" : 1483091493782,
    "path" : "C:/Users/user/Desktop/TDS3301-DATA MINING/assignment/student/server.R",
    "project_path" : "server.R",
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}